"""Helper utility functions."""
import collections


def deep_update(source, overrides):
    """Update a nested dictionary or similar mapping.

    Modify ``source`` in place.
    """
    for key, value in overrides.iteritems():
        if isinstance(value, collections.Mapping) and value:
            returned = deep_update(source.get(key, {}), value)
            source[key] = returned
        elif isinstance(value, list):
            source[key] = source.get(key, []) + value
        else:
            source[key] = overrides[key]
    return source


cadd_columns = {
    'Chrom': 'String',
    'Pos': 'Integer',
    'Ref': 'String',
    'Anc': 'String',
    'Alt': 'String',
    'Type': 'String',
    'Length': 'Integer',
    'isTv': 'String',
    'isDerived': 'String',
    'AnnoType': 'String',
    'Consequence': 'String',
    'ConsScore': 'Integer',
    'ConsDetail': 'String',
    'GC': 'Float',
    'CpG': 'Float',
    'mapAbility20bp': 'Float',
    'mapAbility35bp': 'Float',
    'scoreSegDup': 'Float',
    'priPhCons': 'Float',
    'mamPhCons': 'Float',
    'verPhCons': 'Float',
    'priPhyloP': 'Float',
    'mamPhyloP': 'Float',
    'verPhyloP': 'Float',
    'GerpN': 'Float',
    'GerpS': 'Float',
    'GerpRS': 'Float',
    'GerpRSpval': 'Float',
    'bStatistic': 'Float',
    'mutIndex': 'Float',
    'dnaHelT': 'Float',
    'dnaMGW': 'Float',
    'dnaProT': 'Float',
    'dnaRoll': 'Float',
    'mirSVR-Score': 'Float',
    'mirSVR-E': 'Float',
    'mirSVR-Aln': 'Float',
    'targetScan': 'Float',
    'fitCons': 'Float',
    'cHmmTssA': 'Float',
    'cHmmTssAFlnk': 'Float',
    'cHmmTxFlnk': 'Float',
    'cHmmTx': 'Float',
    'cHmmTxWk': 'Float',
    'cHmmEnhG': 'Float',
    'cHmmEnh': 'Float',
    'cHmmZnfRpts': 'Float',
    'cHmmHet': 'Float',
    'cHmmTssBiv': 'Float',
    'cHmmBivFlnk': 'Float',
    'cHmmEnhBiv': 'Float',
    'cHmmReprPC': 'Float',
    'cHmmReprPCWk': 'Float',
    'cHmmQuies': 'Float',
    'EncExp': 'Float',
    'EncH3K27Ac': 'Float',
    'EncH3K4Me1': 'Float',
    'EncH3K4Me3': 'Float',
    'EncNucleo': 'Float',
    'EncOCC': 'Float',
    'EncOCCombPVal': 'Float',
    'EncOCDNasePVal': 'Float',
    'EncOCFairePVal': 'Float',
    'EncOCpolIIPVal': 'Float',
    'EncOCctcfPVal': 'Float',
    'EncOCmycPVal': 'Float',
    'EncOCDNaseSig': 'Float',
    'EncOCFaireSig': 'Float',
    'EncOCpolIISig': 'Float',
    'EncOCctcfSig': 'Float',
    'EncOCmycSig': 'Float',
    'Segway': 'String',
    'tOverlapMotifs': 'Float',
    'motifDist': 'Float',
    'motifECount': 'Float',
    'motifEName': 'String',
    'motifEHIPos': 'String',
    'motifEScoreChng': 'Float',
    'TFBS': 'Float',
    'TFBSPeaks': 'Float',
    'TFBSPeaksMax': 'Float',
    'isKnownVariant': 'String',
    'ESP_AF': 'Float',
    'ESP_AFR': 'Float',
    'ESP_EUR': 'Float',
    'TG_AF': 'Float',
    'TG_ASN': 'Float',
    'TG_AMR': 'Float',
    'TG_AFR': 'Float',
    'TG_EUR': 'Float',
    'minDistTSS': 'Integer',
    'minDistTSE': 'Integer',
    'GeneID': 'String',
    'FeatureID': 'String',
    'CCDS': 'String',
    'GeneName': 'String',
    'cDNApos': 'Float',
    'relcDNApos': 'Float',
    'CDSpos': 'Float',
    'relCDSpos': 'Float',
    'protPos': 'Float',
    'relProtPos': 'Float',
    'Domain': 'String',
    'Dst2Splice': 'Float',
    'Dst2SplType': 'String',
    'Exon': 'String',
    'Intron': 'String',
    'oAA': 'String',
    'nAA': 'String',
    'Grantham': 'Float',
    'PolyPhenCat': 'String',
    'PolyPhenVal': 'Float',
    'SIFTcat': 'String',
    'SIFTval': 'Float',
    'RawScore': 'Float',
    'PHRED': 'Float'
}
